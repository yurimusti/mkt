{"ast":null,"code":"var _jsxFileName = \"/home/solides/profiler-events/src/App.js\";\nimport React from \"react\";\nimport Routes from \"./routes\";\nimport ReduxThunk from \"redux-thunk\";\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport * as reducers from \"./state\";\nconst rootReducer = combineReducers(reducers);\nconst enhancer = applyMiddleware(ReduxThunk);\nconst store = process.env.NODE_ENV === \"development\" ? createStore(rootReducer, composeWithDevTools(enhancer)) : createStore(rootReducer, enhancer);\n\nconst App = () => React.createElement(Provider, {\n  store: store,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 19\n  },\n  __self: this\n}, React.createElement(Routes, {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 20\n  },\n  __self: this\n}));\n\nexport default App;","map":{"version":3,"sources":["/home/solides/profiler-events/src/App.js"],"names":["React","Routes","ReduxThunk","Provider","createStore","combineReducers","applyMiddleware","composeWithDevTools","reducers","rootReducer","enhancer","store","process","env","NODE_ENV","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,UAAP,MAAuB,aAAvB;AAEA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,WAAT,EAAsBC,eAAtB,EAAuCC,eAAvC,QAA8D,OAA9D;AACA,SAASC,mBAAT,QAAoC,0BAApC;AACA,OAAO,KAAKC,QAAZ,MAA0B,SAA1B;AAEA,MAAMC,WAAW,GAAGJ,eAAe,CAACG,QAAD,CAAnC;AACA,MAAME,QAAQ,GAAGJ,eAAe,CAACJ,UAAD,CAAhC;AAEA,MAAMS,KAAK,GACPC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAAzB,GACMV,WAAW,CAACK,WAAD,EAAcF,mBAAmB,CAACG,QAAD,CAAjC,CADjB,GAEMN,WAAW,CAACK,WAAD,EAAcC,QAAd,CAHrB;;AAKA,MAAMK,GAAG,GAAG,MACR,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAEJ,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADJ,CADJ;;AAMA,eAAeI,GAAf","sourcesContent":["import React from \"react\";\nimport Routes from \"./routes\";\nimport ReduxThunk from \"redux-thunk\";\n\nimport { Provider } from \"react-redux\";\nimport { createStore, combineReducers, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport * as reducers from \"./state\";\n\nconst rootReducer = combineReducers(reducers);\nconst enhancer = applyMiddleware(ReduxThunk);\n\nconst store =\n    process.env.NODE_ENV === \"development\"\n        ? createStore(rootReducer, composeWithDevTools(enhancer))\n        : createStore(rootReducer, enhancer);\n\nconst App = () => (\n    <Provider store={store}>\n        <Routes />\n    </Provider>\n);\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}